CREATE DATABASE StudentDB;
USE StudentDB;

CREATE TABLE Students (
    StudentID INT PRIMARY KEY AUTO_INCREMENT,
    Name VARCHAR(100),
    Department VARCHAR(50),
    Marks FLOAT
);

// Model Class: Student.java
class Student {
    private int studentID;
    private String name;
    private String department;
    private float marks;

    public Student(int studentID, String name, String department, float marks) {
        this.studentID = studentID;
        this.name = name;
        this.department = department;
        this.marks = marks;
    }

    public int getStudentID() { return studentID; }
    public String getName() { return name; }
    public String getDepartment() { return department; }
    public float getMarks() { return marks; }
}

// Controller Class: StudentController.java
import java.sql.*;
import java.util.ArrayList;
import java.util.List;

class StudentController {
    private static final String URL = "jdbc:mysql://localhost:3306/StudentDB";
    private static final String USER = "root";
    private static final String PASSWORD = "password";

    public void addStudent(String name, String department, float marks) {
        String sql = "INSERT INTO Students (Name, Department, Marks) VALUES (?, ?, ?)";
        try (Connection conn = DriverManager.getConnection(URL, USER, PASSWORD);
             PreparedStatement stmt = conn.prepareStatement(sql)) {
            stmt.setString(1, name);
            stmt.setString(2, department);
            stmt.setFloat(3, marks);
            stmt.executeUpdate();
            System.out.println("Student added successfully!");
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    public List<Student> getAllStudents() {
        List<Student> students = new ArrayList<>();
        String sql = "SELECT * FROM Students";
        try (Connection conn = DriverManager.getConnection(URL, USER, PASSWORD);
             Statement stmt = conn.createStatement();
             ResultSet rs = stmt.executeQuery(sql)) {
            while (rs.next()) {
                students.add(new Student(rs.getInt("StudentID"),
                                         rs.getString("Name"),
                                         rs.getString("Department"),
                                         rs.getFloat("Marks")));
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return students;
    }

    public void updateStudent(int studentID, float marks) {
        String sql = "UPDATE Students SET Marks = ? WHERE StudentID = ?";
        try (Connection conn = DriverManager.getConnection(URL, USER, PASSWORD);
             PreparedStatement stmt = conn.prepareStatement(sql)) {
            stmt.setFloat(1, marks);
            stmt.setInt(2, studentID);
            int rows = stmt.executeUpdate();
            if (rows > 0) System.out.println("Student updated successfully!");
            else System.out.println("Student not found!");
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    public void deleteStudent(int studentID) {
        String sql = "DELETE FROM Students WHERE StudentID = ?";
        try (Connection conn = DriverManager.getConnection(URL, USER, PASSWORD);
             PreparedStatement stmt = conn.prepareStatement(sql)) {
            stmt.setInt(1, studentID);
            int rows = stmt.executeUpdate();
            if (rows > 0) System.out.println("Student deleted successfully!");
            else System.out.println("Student not found!");
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
}

// View Class: StudentView.java
import java.util.List;
import java.util.Scanner;

class StudentView {
    private final StudentController controller = new StudentController();

    public void displayMenu() {
        Scanner scanner = new Scanner(System.in);
        while (true) {
            System.out.println("\n=== Student Management System ===");
            System.out.println("1. Add Student");
            System.out.println("2. View Students");
            System.out.println("3. Update Student Marks");
            System.out.println("4. Delete Student");
            System.out.println("5. Exit");
            System.out.print("Choose an option: ");
            int choice = scanner.nextInt();
            switch (choice) {
                case 1 -> {
                    System.out.print("Enter Name: ");
                    scanner.nextLine();
                    String name = scanner.nextLine();
                    System.out.print("Enter Department: ");
                    String department = scanner.nextLine();
                    System.out.print("Enter Marks: ");
                    float marks = scanner.nextFloat();
                    controller.addStudent(name, department, marks);
                }
                case 2 -> {
                    List<Student> students = controller.getAllStudents();
                    System.out.println("\n=== Student List ===");
                    System.out.printf("%-5s %-20s %-15s %-10s%n", "ID", "Name", "Department", "Marks");
                    for (Student student : students) {
                        System.out.printf("%-5d %-20s %-15s %-10.2f%n",
                                student.getStudentID(), student.getName(), student.getDepartment(), student.getMarks());
                    }
                }
                case 3 -> {
                    System.out.print("Enter Student ID: ");
                    int id = scanner.nextInt();
                    System.out.print("Enter New Marks: ");
                    float marks = scanner.nextFloat();
                    controller.updateStudent(id, marks);
                }
                case 4 -> {
                    System.out.print("Enter Student ID: ");
                    int id = scanner.nextInt();
                    controller.deleteStudent(id);
                }
                case 5 -> {
                    System.out.println("Exiting...");
                    return;
                }
                default -> System.out.println("Invalid choice. Try again.");
            }
        }
    }
}

// Main Class: StudentManagementApp.java
public class StudentManagementApp {
    public static void main(String[] args) {
        new StudentView().displayMenu();
    }
}

